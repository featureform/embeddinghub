/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at https://mozilla.org/MPL/2.0/. */

syntax = "proto3";

option go_package = "github.com/featureform/serving/metadata/proto";

package featureform.serving.metadata.proto;

service Metadata {
    rpc ListFeatures(Empty) returns (stream Feature);
    rpc CreateFeatureVariant(FeatureVariant) returns (Empty);
    rpc GetFeature(Name) returns (Feature);
    rpc GetFeatures(stream Name) returns (stream Feature);
    rpc GetFeatureVariant(NameVariant) returns (FeatureVariant);
    rpc GetFeatureVariants(stream NameVariant) returns (stream FeatureVariant);
    rpc ListLabels(Empty) returns (stream Label);
    rpc CreateLabelVariant(LabelVariant) returns (Empty);
    rpc GetLabel(Name) returns (Label);
    rpc GetLabels(stream Name) returns (stream Label);
    rpc GetLabelVariant(NameVariant) returns (LabelVariant);
    rpc GetLabelVariants(stream NameVariant) returns (stream LabelVariant);
    rpc ListTrainingSets(Empty) returns (stream TrainingSet);
    rpc CreateTrainingSetVariant(TrainingSetVariant) returns (Empty);
    rpc GetTrainingSet(Name) returns (TrainingSet);
    rpc GetTrainingSets(stream Name) returns (stream TrainingSet);
    rpc GetTrainingSetVariant(NameVariant) returns (TrainingSetVariant);
    rpc GetTrainingSetVariants(stream NameVariant) returns (stream TrainingSetVariant);
    rpc ListSources(Empty) returns (stream Source);
    rpc CreateSourceVariant(SourceVariant) returns (Empty);
    rpc GetSource(Name) returns (Source);
    rpc GetSources(stream Name) returns (stream Source);
    rpc GetSourceVariant(NameVariant) returns (SourceVariant);
    rpc GetSourceVariants(stream NameVariant) returns (stream SourceVariant);
    rpc ListUsers(Empty) returns (stream User);
    rpc CreateUser(User) returns (Empty);
    rpc GetUser(Name) returns (User);
    rpc GetUsers(stream Name) returns (stream User);
    rpc ListProviders(Empty) returns (stream Provider);
    rpc CreateProvider(Provider) returns (Empty);
    rpc GetProvider(Name) returns (Provider);
    rpc GetProviders(stream Name) returns (stream Provider);
    rpc ListEntities(Empty) returns (stream Entity);
    rpc CreateEntity(Entity) returns (Empty);
    rpc GetEntity(Name) returns (Entity);
    rpc GetEntities(stream Name) returns (stream Entity);
    rpc ListModels(Empty) returns (stream Model);
    rpc CreateModel(Model) returns (Empty);
    rpc GetModel(Name) returns (Model);
    rpc GetModels(stream Name) returns (stream Model);
}

message Name {
    string name = 1;
}

message NameVariant {
    string name = 1;
    string variant = 2;
}

message Empty {}

message Feature {
    string name = 1;
    string default_variant = 2;
    repeated string variants = 3;
}

message FeatureVariant {
    string name = 1;
    string variant = 2;
    NameVariant source = 3;
    string type = 4;
    string entity = 5;
    string created = 6;
    string owner = 7;
    string description = 8;
    string provider = 9;
    repeated NameVariant trainingsets = 10;
}

message Label {
    string name = 1;
    string default_variant = 2;
    repeated string variants = 3;
}

message LabelVariant {
    string name = 1;
    string variant = 2;
    string description = 3;
    string type = 4;
    NameVariant source = 5;
    string entity = 6;
    string created = 7;
    string owner = 8;
    string provider = 9;
    repeated NameVariant trainingsets = 10;
}

message Provider {
    string name = 1;
    string description = 2;
    string type = 3;
    string software = 4;
    string team = 5;
    repeated NameVariant sources = 7;
    repeated NameVariant features = 8;
    repeated NameVariant trainingsets = 9;
    repeated NameVariant labels = 10;
}

message TrainingSet {
    string name = 1;
    string default_variant = 2;
    repeated string variants = 3;
}

message TrainingSetVariant {
    string name = 1;
    string variant = 2;
    string description = 3;
    string owner = 4;
    string created = 5;
    string provider = 6;
    repeated NameVariant features = 7;
    NameVariant label = 8;
}

message Entity {
    string name = 1;
    string description = 2;
    repeated NameVariant features = 3;
    repeated NameVariant labels = 4;
    repeated NameVariant trainingsets = 5;
}

message Model {
    string name = 1;
    string description = 2;
    repeated NameVariant features = 4;
    repeated NameVariant labels = 5;
    repeated NameVariant trainingsets = 6;
}

message User {
    string name = 1;
    repeated NameVariant features = 2;
    repeated NameVariant labels = 3;
    repeated NameVariant trainingsets = 4;
    repeated NameVariant sources = 5;
}

message Source {
    string name = 1;
    string default_variant = 2;
    repeated string variants = 3;
}

message SourceVariant {
    string name = 1;
    string variant = 2;
    string type = 3;
    string owner = 4;
    string description = 5;
    string provider = 6;
    string created = 7;
    repeated NameVariant trainingsets = 8;
    repeated NameVariant features = 9;
    repeated NameVariant labels = 10;
}
