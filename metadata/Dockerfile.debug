# RUN docker build -f ./metadata/Dockerfile . -t metadata from /serving
# docker tag metadata:latest featureformcom/metadata:latest
# docker push featureformcom/metadata:latest
FROM golang:1.21-alpine as builder

WORKDIR /app

COPY go.mod ./
COPY go.sum ./

COPY ./metadata/proto/metadata.proto ./metadata/proto/metadata.proto
RUN apk update && apk add protobuf-dev && go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@latest && go install google.golang.org/protobuf/cmd/protoc-gen-go@latest
ENV PATH /go/bin:$PATH
RUN protoc --go_out=. --go_opt=paths=source_relative --go-grpc_out=. --go-grpc_opt=paths=source_relative ./metadata/proto/metadata.proto

COPY ./fferr ./fferr
COPY ./metadata/*.go ./metadata/
COPY ./metadata/proto/ ./metadata/proto/
COPY ./helpers/ ./helpers/
COPY ./metadata/search/ ./metadata/search/
COPY ./metadata/server/server.go ./metadata/main/server.go
COPY ./provider/provider_config/ ./provider/provider_config/
COPY ./provider/provider_type/ ./provider/provider_type/
COPY ./config/ ./config/

RUN go install github.com/go-delve/delve/cmd/dlv@latest
RUN go build -gcflags="all=-N -l" ./metadata/main/server.go

FROM alpine

COPY --from=builder ./app/server /server

EXPOSE 8080 40002
ENTRYPOINT ["/go/bin/dlv", "--listen=:40002", "--headless=true", "--api-version=2", "--accept-multiclient", "exec", "./server"]